--=============================================================================
--	Filename:	tp_procs.sql
--	Author:	Nanaji Veturi
--	Date:		May/28/2010
--=============================================================================

--=============================================================================
--	Procedure:	EDIDB2A.SP_UTIL_OP_999_VALIDATE()
--
--=============================================================================
CALL EDIDB2A.SP_UTIL_DROP( 'PROCEDURE EDIDB2A.SP_UTIL_OP_999_VALIDATE')@

CREATE PROCEDURE "EDIDB2A"."SP_UTIL_OP_999_VALIDATE" (
    IN "P_INPUTFILEID"	VARCHAR(15),
    IN "P_INPUTFILENAME" VARCHAR(100),
    IN "P_INPUTFILEROOTDIR" VARCHAR(100),
    IN "P_INPUTFILESUBROOT" VARCHAR(100),
    IN "P_ISASENDERID"	VARCHAR(15),
    IN "P_ISACNTLNUM"	VARCHAR(15),
    IN "P_SOURCESTRING"	VARCHAR(500),
    IN "P_STATUS"	VARCHAR(2),
    IN "P_DELIMITER"	VARCHAR(1),
    IN "P_TERMINATOR"	VARCHAR(1),
    OUT "P_ERR_CODE"	INTEGER,
    OUT "P_ERR_DESC"	VARCHAR(50),
    OUT "P_GS_CNTL_NUMS"	VARCHAR(100),
    OUT "P_ST_CNTL_NUMS"	VARCHAR(100),
    OUT "P_FILEPATH"	VARCHAR(100),
    OUT "P_FILENAME"	VARCHAR(50),
    OUT "P_TRANNUM" VARCHAR(5))
BEGIN
--=============================================================================
--	DECLERATIOIN OF VARIABLES IN PROCEDURE
--=============================================================================
DECLARE v_ISASENDERID VARCHAR(15);
DECLARE v_SOURCESTRING VARCHAR(500);
DECLARE v_SSTRING VARCHAR(200);
DECLARE v_STRING VARCHAR(200);
DECLARE v_SUBSTRING VARCHAR(200);
DECLARE v_SUBSTRING1 VARCHAR(200);
DECLARE v_DELIMITER VARCHAR(1);
DECLARE v_TERMINATOR VARCHAR(1);
DECLARE v_ISACNTLNUM VARCHAR(15);
DECLARE v_GSCNTLNUM VARCHAR(15);
DECLARE v_GSACKCODE VARCHAR(1);
DECLARE v_STCNTLNUM VARCHAR(15);
DECLARE v_STACKCODE VARCHAR(1);
DECLARE v_LENGTH INTEGER;
DECLARE v_M INTEGER DEFAULT 1;
DECLARE v_N INTEGER;
DECLARE v_STRINGLENGTH INTEGER;
DECLARE v_SQLCODE INTEGER;
DECLARE v_FILEROOT VARCHAR(100);
DECLARE v_SUBROOT VARCHAR(100);
DECLARE v_FILENAME VARCHAR(50);
DECLARE v_GSCNTLNUMS VARCHAR(1000) DEFAULT '';
DECLARE v_STCNTLNUMS VARCHAR(1000) DEFAULT '';
DECLARE v_TRANTYPE VARCHAR(20);
DECLARE v_FILEID BIGINT;
DECLARE v_STATUS VARCHAR(2);
DECLARE v_GSINDEX INTEGER DEFAULT 0;
DECLARE v_STINDEX INTEGER DEFAULT 0;
DECLARE v_TEMPGSCTRL VARCHAR(2) DEFAULT '';
DECLARE v_INPUTFILEID VARCHAR(15);
DECLARE v_INPUTFILENAME VARCHAR(100);
DECLARE v_INPUTFILEROOTDIR VARCHAR(100);
DECLARE v_INPUTFILESUBROOT VARCHAR(100);
DECLARE v_filePath VARCHAR(300);
SET v_ISASENDERID = P_ISASENDERID;
SET v_ISACNTLNUM = P_ISACNTLNUM;
SET v_SOURCESTRING = P_SOURCESTRING;
SET v_DELIMITER = P_DELIMITER;
SET v_TERMINATOR= P_TERMINATOR;
SET v_STATUS = P_STATUS;


SET v_INPUTFILEID = P_INPUTFILEID;
SET v_INPUTFILENAME = P_INPUTFILENAME;
SET v_INPUTFILEROOTDIR = P_INPUTFILEROOTDIR;
SET v_INPUTFILESUBROOT = P_INPUTFILESUBROOT;
SET v_filePath = V_INPUTFILEROOTDIR || V_INPUTFILESUBROOT;




-- =============================================================
-- TO FIND THE NUMBER OF FIELD TERMINATORS
-- ============================================================
SET v_SSTRING = REPLACE(v_SOURCESTRING,v_TERMINATOR,'');--
SET v_N=(LENGTH(v_SOURCESTRING) - LENGTH(v_SSTRING));--
 --==============================================================
-- REPEAT LOOP FOR 'N' NUMBER OF OCCURENCES OF FIELD TERMINATOR
 --==============================================================
 
WHILE (v_M<=v_N) DO
	SET v_STRING = SUBSTR(v_SOURCESTRING,1,(LOCATE(v_TERMINATOR,v_SOURCESTRING)-1));
	SET v_GSCNTLNUM = SUBSTR(v_STRING,1,(LOCATE(v_DELIMITER,v_STRING)-1));
	SET v_LENGTH = LENGTH(v_GSCNTLNUM);
	SET v_SUBSTRING = SUBSTR(v_STRING,v_LENGTH+2);
	SET v_GSACKCODE = SUBSTR(v_SUBSTRING,1,(LOCATE(v_DELIMITER,v_SUBSTRING)-1));
	SET v_LENGTH = LENGTH(v_GSACKCODE);
	SET v_SUBSTRING1 =SUBSTR(v_SUBSTRING,v_LENGTH+2);
	SET v_STCNTLNUM = SUBSTR(v_SUBSTRING1,1,(LOCATE(v_DELIMITER,v_SUBSTRING1)-1));
	SET v_LENGTH = LENGTH(v_STCNTLNUM);
	SET v_STACKCODE = SUBSTR(v_SUBSTRING1,v_LENGTH+2,1);
	IF  v_STCNTLNUM = '' THEN
		UPDATE EDIDB2A.T_OUT_ST SET ACKN_STT_999 = v_GSACKCODE WHERE GS_CTRL_NUM = CAST(v_GSCNTLNUM AS INTEGER) AND ISA_CTRL_NUM = CAST(P_ISACNTLNUM AS INTEGER);
	ELSE 
   		UPDATE EDIDB2A.T_OUT_ST SET ACKN_STT_999 = v_STACKCODE WHERE ST_CTRL_NUM = CAST(v_STCNTLNUM AS INTEGER) AND ISA_CTRL_NUM = CAST(P_ISACNTLNUM AS INTEGER);
	END IF;
	UPDATE EDIDB2A.T_OUT_GS SET ACKN_STT_999 = v_GSACKCODE WHERE GS_CTRL_NUM = CAST(v_GSCNTLNUM AS INTEGER)AND ISA_CTRL_NUM = CAST(P_ISACNTLNUM AS INTEGER);
	IF v_GSCNTLNUM <> v_TEMPGSCTRL THEN
		IF v_GSACKCODE = 'R' AND v_GSINDEX <> 0  THEN 
	    	SET v_GSCNTLNUMS = v_GSCNTLNUMS || '|' || v_GSCNTLNUM ;
	    	
		ELSEIF v_GSACKCODE = 'R'  THEN
			SET v_GSCNTLNUMS = v_GSCNTLNUMS || v_GSCNTLNUM ;
			SET v_GSINDEX = v_GSINDEX + 1;
        END IF;
	END IF;		
	IF v_STACKCODE = 'R' AND v_STINDEX <> 0   THEN
		SET  v_STCNTLNUMS = v_STCNTLNUMS || '|' || v_STCNTLNUM ;
		SET v_STINDEX = v_STINDEX + 1;		       		
	ELSEIF v_STACKCODE = 'R'   THEN
		SET v_STCNTLNUMS = v_STCNTLNUMS || v_STCNTLNUM ;	
	    SET v_STINDEX = v_STINDEX + 1;			
	END IF;
	SELECT FILE_ID,TRAN_NUM INTO v_FILEID,v_TRANTYPE 
			FROM EDIDB2A.T_OUT_GS 
			WHERE GS_CTRL_NUM = CAST(v_GSCNTLNUM AS INTEGER)FETCH FIRST 1 ROWS ONLY WITH UR;	 

	SELECT SUBSTR(v_TRANTYPE,1,3) INTO v_TRANTYPE FROM SYSIBM.SYSDUMMY1;

	IF v_TRANTYPE = '837' THEN   
		UPDATE EDIDB2A.T_837_FILE_PCES_LOG SET FILE_STT_CD = v_STATUS WHERE FILE_ID = v_FILEID ;
   	
		ELSEIF v_TRANTYPE = '834' THEN
			--UPDATE EDIDB2A.T_834_FILE_CTRL_LOG SET FILE_STT_CD = v_STATUS  WHERE FILE_ID = v_FILEID ;
   
	   
			ELSEIF v_TRANTYPE = '835' THEN
				UPDATE EDIDB2A.T_835_FILE_PCES_LOG SET FILE_STT_CD = v_STATUS  WHERE FILE_ID = v_FILEID ;
   
				ELSEIF v_TRANTYPE = '820' THEN
				-- UPDATE EDIDB2A.T_820_FILE_CTRL_LOG SET FILE_STT_CD = v_STATUS  WHERE FILE_ID = v_FILEID ;
END IF;	 
			SET v_STRINGLENGTH=LENGTH(v_STRING);--
			SET v_SOURCESTRING=SUBSTR(v_SOURCESTRING,v_STRINGLENGTH+2);--
	 
			SET v_M = v_M+1;
	    SET v_TEMPGSCTRL =  v_GSCNTLNUM ;
	
END WHILE;
	IF v_TRANTYPE = '837' THEN  
		INSERT INTO EDIDB2A.T_837_FILE_PCES_LOG (FILE_ID,FILE_NME,FILE_ROOT_DTRY_TXT,FILE_SUB_DTRY_TXT)VALUES(CAST(v_INPUTFILEID AS BIGINT), v_INPUTFILENAME,v_INPUTFILEROOTDIR,v_INPUTFILESUBROOT);
--=============================================================================
-- Retrieve the record corresponding to the FILE_ID
--=============================================================================
		SELECT FILE_ROOT_DTRY_TXT,FILE_SUB_DTRY_TXT,FILE_NME INTO v_FILEROOT,v_SUBROOT,v_FILENAME  FROM EDIDB2A.T_837_FILE_PCES_LOG WHERE FILE_ID = v_FILEID ;
	ELSEIF v_TRANTYPE = '834' THEN
		--INSERT INTO T_834_FILE_CTRL_LOG (FILE_ID,FILE_PATH_TXT,FILE_NME) VALUES(CAST(v_INPUTFILEID AS BIGINT),v_filePath,v_INPUTFILENAME);
		--SELECT FILE_PATH_TXT,FILE_NME INTO v_FILEROOT,v_FILENAME FROM  T_834_FILE_CTRL_LOG WHERE FILE_ID= v_FILEID ;
	ELSEIF v_TRANTYPE = '835' THEN
		INSERT INTO EDIDB2A.T_835_FILE_PCES_LOG (FILE_ID,FILE_NME,FILE_ROOT_DTRY_TXT,FILE_SUB_DTRY_TXT) VALUES(CAST(v_INPUTFILEID AS BIGINT),v_INPUTFILENAME,v_INPUTFILEROOTDIR,v_INPUTFILESUBROOT);
--=============================================================================
-- Retrieve the record corresponding to the FILE_ID
--=============================================================================
		SELECT FILE_ROOT_DTRY_TXT,FILE_SUB_DTRY_TXT,FILE_NME INTO v_FILEROOT,v_SUBROOT,v_FILENAME FROM EDIDB2A.T_835_FILE_PCES_LOG WHERE FILE_ID = v_FILEID ;  		     
	END IF;	 

SET P_GS_CNTL_NUMS = v_GSCNTLNUMS;
SET P_ST_CNTL_NUMS = v_STCNTLNUMS;
SET P_FILEPATH = v_FILEROOT || v_SUBROOT;
SET P_FILENAME = v_FILENAME;
SET P_TRANNUM =  v_TRANTYPE;	

END@

--=============================================================================
--	Procedure:	EDIDB2A.SP_UTIL_OP_TA1_VALIDATE()
--
--=============================================================================
CALL EDIDB2A.SP_UTIL_DROP( 'PROCEDURE EDIDB2A.SP_UTIL_OP_TA1_VALIDATE')@

CREATE PROCEDURE "EDIDB2A"."SP_UTIL_OP_TA1_VALIDATE" (
    IN "P_FILEID"	VARCHAR(15),
    IN "P_INPUTFILENAME" VARCHAR(50),
    IN "P_INPUTROOTDIR" VARCHAR(100),
    IN "P_INPUTSUBDIR" VARCHAR(100),
    IN "P_SOURCESTRING"	VARCHAR(500),
    IN "P_SENDERID"	VARCHAR(20),
    IN "P_STATUS" VARCHAR(02),
    IN "P_DELIMITER"	VARCHAR(1),
    IN "P_TERMINATOR"	VARCHAR(1),
    OUT "P_ERR_CODE"	INTEGER,
    OUT "P_ERR_DESC"	VARCHAR(50),
    OUT "P_ISA_CNTL_NUMS"	VARCHAR(500),
    OUT "P_FILEPATH"	VARCHAR(100),
    OUT "P_FILENAME"	VARCHAR(50),
    OUT "P_TRANNUM" VARCHAR(5) )
  SPECIFIC "SQL100910020935500"
  LANGUAGE SQL
  NOT DETERMINISTIC
  EXTERNAL ACTION
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  INHERIT SPECIAL REGISTERS
BEGIN
--=============================================================================
--	DECLERATIOIN OF VARIABLES IN PROCEDURE
--=============================================================================
DECLARE v_SenderId VARCHAR(20);
DECLARE v_SourceString VARCHAR(200);
DECLARE v_rString VARCHAR(200);
DECLARE v_String VARCHAR(200);
DECLARE v_Delimiter VARCHAR(1);
DECLARE v_Terminator VARCHAR(1);
DECLARE v_ISACNTLNUM VARCHAR(9);
DECLARE v_TA1ACK VARCHAR(1);
DECLARE v_StringLength INTEGER;
DECLARE v_m INTEGER DEFAULT 1;
DECLARE v_n INTEGER;
DECLARE v_fileId BIGINT;
DECLARE v_tranType VARCHAR(4);
DECLARE SQLCODE INTEGER DEFAULT 0;
DECLARE  v_ISACNTLNUMS VARCHAR(200) default '';
DECLARE  v_FileRoot VARCHAR(60);
DECLARE  v_SubRoot VARCHAR(60);
DECLARE  v_FileName VARCHAR(60);
DECLARE  v_TA1ACK1 VARCHAR(02);
DECLARE  v_Status VARCHAR(1);
DECLARE  v_InputFileId VARCHAR(15);
DECLARE  v_InputFileName  VARCHAR(50);
DECLARE  v_InputFileRoot  VARCHAR(100);
DECLARE  v_InputFileSub  VARCHAR(100);
DECLARE  v_File_Path  VARCHAR(100);
DECLARE  v_IsaControlNum VARCHAR(20)default ''; 
--=============================================================================
-- Setup the EXIT handler for all SQL exceptions
--=============================================================================
DECLARE EXIT HANDLER FOR SQLEXCEPTION
VALUES(SQLCODE) INTO P_ERR_CODE;

SET v_SourceString = P_SourceString;
SET v_Delimiter = P_Delimiter;
SET v_Terminator= P_Terminator;
SET v_SenderId = P_SENDERID;
SET v_Status = P_STATUS;
SET v_InputFileId = P_FILEID;
SET v_InputFileName = P_INPUTFILENAME;
SET v_InputFileRoot = P_INPUTROOTDIR;
SET v_InputFileSub = P_INPUTSUBDIR;
SET  v_File_Path = v_InputFileRoot || v_InputFileSub;        



-- =============================================================
-- TO FIND THE NUMBER OF FIELD TERMINATORS
-- ============================================================
SET v_rString = REPLACE(v_SourceString,v_Terminator,'');
SET v_n=(LENGTH(v_SourceString) - LENGTH(v_rString));
-- ==============================================================
-- REPEAT LOOP FOR 'n' NUMBER OF OCCURENCES OF FIELD TERMINATOR
-- ==============================================================
WHILE (v_m<=v_n)
DO
	SET v_String=SUBSTR(v_SourceString,1,(LOCATE(v_Terminator,v_SourceString)-1));
	SET v_ISACNTLNUM=SUBSTR(v_String,1,(LOCATE(v_Delimiter,v_String)-1));
	SET v_StringLength=LENGTH(v_ISACNTLNUM);
	SET v_TA1ACK=SUBSTR(v_String,v_StringLength+2);                       
  UPDATE EDIDB2A.T_OUT_ISA SET TA1_ACKN_STT = v_TA1ACK WHERE ISA_CTRL_NUM =CAST(v_ISACNTLNUM AS INTEGER) AND RECV_ID = P_SENDERID;
 -- SET P_ERR_CODE = SQLCODE;
	
	IF v_TA1ACK = 'R' AND v_ISACNTLNUM <> v_IsaControlNum THEN  
	 SET  v_IsaControlNum = v_ISACNTLNUM ; 
	SET v_ISACNTLNUMS = v_ISACNTLNUMS || v_IsaControlNum || '|';
  END IF;
	
	SELECT FILE_ID,TRAN_NUM INTO v_fileId,v_tranType FROM EDIDB2A.T_OUT_ISA WHERE ISA_CTRL_NUM =CAST(v_ISACNTLNUM AS INTEGER) AND RECV_ID = P_SENDERID FETCH FIRST 1 ROWS ONLY WITH UR;
	SET P_ERR_CODE = SQLCODE ;
	
	SELECT SUBSTR(v_tranType,1,3) INTO v_tranType FROM SYSIBM.SYSDUMMY1;
	
	IF v_TA1ACK = 'A' THEN 
	SET v_TA1ACK1 = '01';
	ELSEIF v_TA1ACK = 'R' THEN 
	SET v_TA1ACK1 = '03';
	END IF;
	
	
	IF v_tranType = '837' THEN
		UPDATE EDIDB2A.T_837_FILE_PCES_LOG SET FILE_STT_CD = v_Status WHERE FILE_ID = v_fileId ;
	     ELSEIF v_tranType = '834' THEN
		--UPDATE EDIDB2A.T_834_FILE_CTRL_LOG SET FILE_STT_CD = v_Status WHERE FILE_ID = v_fileId ;
	     ELSEIF v_tranType = '835' THEN
	      UPDATE EDIDB2A.T_835_FILE_PCES_LOG SET FILE_STT_CD = v_Status WHERE FILE_ID = v_fileId ;
    ELSEIF v_tranType = '820' THEN
	--UPDATE EDIDB2A.T_820_FILE_CTRL_LOG SET FILE_STT_CD = v_Status WHERE FILE_ID = v_fileId ;
	ELSE
	SET P_ERR_CODE = 100;
	SET P_ERR_DESC = 'Transaction Type Invalid';
	END IF;
	SET v_StringLength=LENGTH(v_String);
	SET v_SourceString=SUBSTR(v_SourceString,v_StringLength+2);
	SET v_m = v_m+1;
END WHILE;

IF v_tranType = '837' THEN
--=============================================================================
-- Retrieve the record corresponding to the FILE_ID
--=============================================================================
SELECT FILE_ROOT_DTRY_TXT,FILE_SUB_DTRY_TXT,FILE_NME INTO v_FileRoot,v_SubRoot,v_FileName  FROM EDIDB2A.T_837_FILE_PCES_LOG WHERE FILE_ID = v_fileId ;
INSERT INTO EDIDB2A.T_837_FILE_PCES_LOG (FILE_ID,FILE_NME,FILE_ROOT_DTRY_TXT,FILE_SUB_DTRY_TXT)VALUES(CAST (v_InputFileId AS BIGINT), v_InputFileName ,v_InputFileRoot,v_InputFileSub);

 ELSEIF v_tranType = '834' THEN                                                                                                       
--SELECT FILE_PATH_TXT,FILE_NME INTO v_FileRoot,v_FileName FROM  T_834_FILE_CTRL_LOG WHERE FILE_ID= v_fileId;
--INSERT INTO T_834_FILE_CTRL_LOG (FILE_ID,FILE_NME,FILE_PATH_TXT) VALUES(CAST (v_InputFileId AS BIGINT),v_InputFileName ,v_File_Path); 
ELSEIF v_tranType = '835' THEN
SELECT FILE_ROOT_DTRY_TXT,FILE_SUB_DTRY_TXT,FILE_NME INTO v_FileRoot,v_SubRoot,v_FileName FROM EDIDB2A.T_835_FILE_PCES_LOG WHERE FILE_ID = v_fileId;
INSERT INTO EDIDB2A.T_835_FILE_PCES_LOG  (FILE_ID,FILE_NME,FILE_ROOT_DTRY_TXT,FILE_SUB_DTRY_TXT) VALUES(CAST (v_InputFileId AS BIGINT), v_InputFileName ,v_InputFileRoot,v_InputFileSub);
ELSEIF v_tranType = '820' THEN
	END IF;
SET P_ISA_CNTL_NUMS = v_ISACNTLNUMS;
SET P_FILEPATH = v_FileRoot || v_SubRoot;
SET P_FILENAME = v_FileName;
SET P_TRANNUM =	 v_tranType;
END@